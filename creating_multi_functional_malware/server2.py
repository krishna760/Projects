import socket
import subprocess

class Server:
    def __init__(self, host, port):
        self.host = host
        self.port = port
        self.server_socket = None

    def start(self):
        self.server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.server_socket.bind((self.host, self.port))
        self.server_socket.listen(1)
        print(f'Server listening on {self.host}:{self.port}')

        while True:
            client_socket, client_address = self.server_socket.accept()
            print(f'Connected to client: {client_address}')

            while True:
                data = client_socket.recv(1024).decode('utf-8')
                print(f'Received command: {data}')

                if data == 'exit':
                    break

                result = self.execute_command(data)

                client_socket.sendall(result)
                print(f'Result sent to client: {result.decode("utf-8")}')
            
            client_socket.close()
            print('Client disconnected')

    def execute_command(self, command):
        try:
            result = subprocess.check_output(command, shell=True, stderr=subprocess.STDOUT)
            return result
        except subprocess.CalledProcessError as e:
            return str(e.output)


if __name__ == '__main__':
    server = Server('localhost', 12346)
    server.start()
